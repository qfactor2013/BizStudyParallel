--Q1
select employee_id, first_name, last_name, job_id, salary
from employees
where salary >= 10000
order by job_id, employee_id


-- Q2
select EMPLOYEE_id, concat(email, '@samsung.com') as "e-mail"
from employees
order by employee_id

-- Q3
select DEPARTMENT_ID, ROUND(avg(salary)) as "AVG_SALARY"
from EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING COUNT(DEPARTMENT_ID) >= 5
ORDER BY DEPARTMENT_ID


-- Q4

SELECT DEPARTMENT_ID, FIRST_NAME, LAST_NAME, SALARY, 
CASE DEPARTMENT_ID WHEN 30 THEN SALARY * 1.3
					WHEN 50 THEN SALARY * 1.5
					WHEN 80 THEN SALARY * 0.9
					ELSE SALARY
END "NEXT_SALARY"					
FROM EMPLOYEES 
ORDER BY DEPARTMENT_ID ASC, FIRST_NAME DESC


--Q5

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_ID, SALARY
FROM EMPLOYEES
WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES)


-- Q6

SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME, J.JOB_TITLE
FROM EMPLOYEES E, JOBS J
WHERE E.JOB_ID = J.JOB_ID
AND J.JOB_TITLE like ('%'||initcap('manager')||'%')
ORDER BY EMPLOYEE_ID DESC


--Q7

SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E2.FIRST_NAME AS "MANAGER_NAME", 
TO_CHAR(E2.HIRE_DATE, 'YY/MM/DD') AS "MGR_HIRE_DATE"
FROM EMPLOYEES E 
LEFT OUTER JOIN EMPLOYEES E2 ON E.MANAGER_ID = E2.EMPLOYEE_ID
ORDER BY EMPLOYEE_ID DESC


-- Q8

SELECT E.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.CITY, count(employee_id) AS "EMPLOYEE_CNT",
ROUND(avg(salary)) AS "AVG_SAL" 
FROM EMPLOYEES E
LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
LEFT JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID 
AND L.CITY IN ('Toronto', 'London', 'Oxford')
WHERE CITY IS NOT NULL
group by e.department_id, D.DEPARTMENT_NAME, L.CITY
order by department_id


--Q9
UPDATE (
SELECT J.JOB_ID, J.JOB_TITLE, J.MIN_SALARY, J.MAX_SALARY
FROM JOBS J
WHERE JOB_ID = 'IT_PROG'
) SET JOB_TITLE = initcap('solution programmer'), max_salary = 50000



--Q10

 INSERT INTO COUNTRIES VALUES('KR', 'Korea', 3)